<Activity mc:Ignorable="sap sap2010" x:Class="EmailAutomationUpdate" VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="850.4,701.6" sap2010:WorkflowViewState.IdRef="EmailAutomationUpdate_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing.Common" xmlns:sd1="clr-namespace:System.Drawing;assembly=System.Drawing.Primitives" xmlns:sd2="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System.Net.Mail" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="45">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.Core.Activities.OCR.Engines</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>UiPath.PDF</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Platform.Triggers</x:String>
      <x:String>UiPath.Platform.Triggers.Scope</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>UiPath.Database.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="72">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Core</AssemblyReference>
      <AssemblyReference>UiPath.Vision.OmniPage.Core</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.PDF</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Flowchart DisplayName="EmailAutomationUpdate" sap:VirtualizedContainerService.HintSize="633.6,636.8" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="scg:List(snm:MailMessage)" Name="mails" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75.2</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">300,77.7 300,107.7 289.2,107.7 289.2,117.6</av:PointCollection>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID1</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">189.2,117.6</av:Point>
          <av:Size x:Key="ShapeSize">200,24.8</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">289.2,142.4 289.2,192.4</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:GetIMAPMailMessages ClientName="{x:Null}" ClientVersion="{x:Null}" FilterExpression="{x:Null}" SecurePassword="{x:Null}" TimeoutMS="{x:Null}" UseOAuth="{x:Null}" DeleteMessages="False" DisplayName="Get IMAP Mail Messages" Email="malligamuthuraj85@gmail.com" EnableSSL="True" FilterExpressionCharacterSet="US-ASCII" sap:VirtualizedContainerService.HintSize="200,24.8" sap2010:WorkflowViewState.IdRef="GetIMAPMailMessages_1" IgnoreCRL="False" MailFolder="Inbox" MarkAsRead="True" Messages="[mails]" OnlyUnreadMessages="True" OrderByDate="NewestFirst" Password="svkolzzarmojehip&#xA;" Port="993" SecureConnection="Auto" Server="imap.gmail.com" Top="10">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:GetIMAPMailMessages>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID0">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">189.2,192.4</av:Point>
              <av:Size x:Key="ShapeSize">200,52.8</av:Size>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ForEach x:TypeArguments="snm:MailMessage" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="971.2,5171.2" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[mails]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="snm:MailMessage">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="snm:MailMessage" Name="mail" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="936,4662.4" sap2010:WorkflowViewState.IdRef="Sequence_1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If Condition="[mail.Attachments.Count &gt;= 1]" sap:VirtualizedContainerService.HintSize="873.6,4550.4" sap2010:WorkflowViewState.IdRef="If_1">
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="796,4272" sap2010:WorkflowViewState.IdRef="Sequence_2">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Name="emailSub" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If Condition="[mail.Subject.Contains(&quot;Invoice&quot;)]" sap:VirtualizedContainerService.HintSize="733.6,4160" sap2010:WorkflowViewState.IdRef="If_8">
                          <If.Then>
                            <Sequence sap:VirtualizedContainerService.HintSize="656,3881.6" sap2010:WorkflowViewState.IdRef="Sequence_12">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="s:String[]" Name="AllFiles" />
                                <Variable x:TypeArguments="sd2:DataTable" Name="ExcelData" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:SaveMailAttachments Attachments="{x:Null}" DisplayName="Save Attachments" ExcludeInlineAttachments="False" Filter=".*(.png|.pdf|.jpg)" FolderPath="EmailAttachments" sap:VirtualizedContainerService.HintSize="593.6,88" sap2010:WorkflowViewState.IdRef="SaveMailAttachments_6" Message="[mail]" OverwriteExisting="False" />
                              <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="593.6,132" sap2010:WorkflowViewState.IdRef="MultipleAssign_6">
                                <ui:MultipleAssign.AssignOperations>
                                  <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_11">
                                      <ui:AssignOperation.To>
                                        <OutArgument x:TypeArguments="x:String">[emailSub]</OutArgument>
                                      </ui:AssignOperation.To>
                                      <ui:AssignOperation.Value>
                                        <InArgument x:TypeArguments="x:String">[mail.Subject.Replace(":","")]</InArgument>
                                      </ui:AssignOperation.Value>
                                    </ui:AssignOperation>
                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_12">
                                      <ui:AssignOperation.To>
                                        <OutArgument x:TypeArguments="x:String">[emailSub]</OutArgument>
                                      </ui:AssignOperation.To>
                                      <ui:AssignOperation.Value>
                                        <InArgument x:TypeArguments="x:String">[mail.Subject.Replace(".","")]</InArgument>
                                      </ui:AssignOperation.Value>
                                    </ui:AssignOperation>
                                  </scg:List>
                                </ui:MultipleAssign.AssignOperations>
                              </ui:MultipleAssign>
                              <ui:SaveMail DisplayName="Save Mail Message" FilePath="[&quot;EmailSubject\&quot; +emailSub+&quot;.eml&quot;]" sap:VirtualizedContainerService.HintSize="593.6,88" sap2010:WorkflowViewState.IdRef="SaveMail_7" MailMessage="[mail]" />
                              <Sequence DisplayName="Extract a pdf data to excel sheet" sap:VirtualizedContainerService.HintSize="593.6,3341.6" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="x:String" Name="FilesValue" />
                                  <Variable x:TypeArguments="s:String[]" Name="PathVar" />
                                  <Variable x:TypeArguments="sd2:DataTable" Name="InvoiceDT" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="531.2,81.6" sap2010:WorkflowViewState.IdRef="Assign_3">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="s:String[]">[PathVar]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles("EmailAttachments","*.pdf")]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[InvoiceDT]" DisplayName="Read Range Workbook" sap:VirtualizedContainerService.HintSize="531.2,88" sap2010:WorkflowViewState.IdRef="ReadRange_1" SheetName="Sheet1" WorkbookPath="ExcelData.xlsx" />
                                <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="531.2,2980" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[PathVar]">
                                  <ui:ForEach.Body>
                                    <ActivityAction x:TypeArguments="x:String">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="x:String" Name="file" />
                                      </ActivityAction.Argument>
                                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="496,2855.2" sap2010:WorkflowViewState.IdRef="Sequence_14">
                                        <Sequence.Variables>
                                          <Variable x:TypeArguments="x:String" Name="InvoiceDateFormat" />
                                          <Variable x:TypeArguments="x:String" Name="InvoiceNumbers" />
                                          <Variable x:TypeArguments="x:String" Name="InvoiceProjectName" />
                                          <Variable x:TypeArguments="x:String" Name="InvoiceTotal" />
                                          <Variable x:TypeArguments="x:String" Name="BillTotal" />
                                        </Sequence.Variables>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:StartProcess Arguments="{x:Null}" WorkingDirectory="{x:Null}" DisplayName="Start Process" FileName="[file.ToString]" sap:VirtualizedContainerService.HintSize="433.6,88" sap2010:WorkflowViewState.IdRef="StartProcess_1" />
                                        <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window 'msedge.exe Invoice1.pdf'" sap:VirtualizedContainerService.HintSize="433.6,1588" sap2010:WorkflowViewState.IdRef="WindowScope_6" InformativeScreenshot="36bc67f2566ee8137116d2b9d6d8b4d8" Selector="&lt;wnd app='msedge.exe' cls='Chrome_WidgetWin_1' title='Invoice*.pdf - Work - Microsoft​ Edge' /&gt;">
                                          <ui:WindowScope.Body>
                                            <ActivityAction x:TypeArguments="x:Object">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                              </ActivityAction.Argument>
                                              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="400,1440.8" sap2010:WorkflowViewState.IdRef="Sequence_27">
                                                <Sequence.Variables>
                                                  <Variable x:TypeArguments="x:String" Name="InvoiceNumber" />
                                                  <Variable x:TypeArguments="x:String" Name="InvoiceProjects" />
                                                  <Variable x:TypeArguments="x:String" Name="Total" />
                                                  <Variable x:TypeArguments="x:String" Name="BillTo" />
                                                </Sequence.Variables>
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="337.6,133.6" sap2010:WorkflowViewState.IdRef="SendHotkey_24" Key="num1" KeyModifiers="Ctrl" SpecialKey="True">
                                                  <ui:SendHotkey.Target>
                                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="4eb67425-66bc-479a-bab3-680eba7fc3c2">
                                                      <ui:Target.TimeoutMS>
                                                        <InArgument x:TypeArguments="x:Int32" />
                                                      </ui:Target.TimeoutMS>
                                                      <ui:Target.WaitForReady>
                                                        <InArgument x:TypeArguments="ui:WaitForReady" />
                                                      </ui:Target.WaitForReady>
                                                    </ui:Target>
                                                  </ui:SendHotkey.Target>
                                                </ui:SendHotkey>
                                                <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="337.6,133.6" sap2010:WorkflowViewState.IdRef="SendHotkey_25" Key="home" KeyModifiers="Ctrl" SpecialKey="True">
                                                  <ui:SendHotkey.Target>
                                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="5fc8e5ab-6daa-4158-8754-efc52cb0ea89">
                                                      <ui:Target.TimeoutMS>
                                                        <InArgument x:TypeArguments="x:Int32" />
                                                      </ui:Target.TimeoutMS>
                                                      <ui:Target.WaitForReady>
                                                        <InArgument x:TypeArguments="ui:WaitForReady" />
                                                      </ui:Target.WaitForReady>
                                                    </ui:Target>
                                                  </ui:SendHotkey.Target>
                                                </ui:SendHotkey>
                                                <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="337.6,133.6" sap2010:WorkflowViewState.IdRef="SendHotkey_26" Key="enter" KeyModifiers="None" SpecialKey="True">
                                                  <ui:SendHotkey.Target>
                                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="f9eb5c74-128b-4e42-a39b-ec618320dc2b">
                                                      <ui:Target.TimeoutMS>
                                                        <InArgument x:TypeArguments="x:Int32" />
                                                      </ui:Target.TimeoutMS>
                                                      <ui:Target.WaitForReady>
                                                        <InArgument x:TypeArguments="ui:WaitForReady" />
                                                      </ui:Target.WaitForReady>
                                                    </ui:Target>
                                                  </ui:SendHotkey.Target>
                                                </ui:SendHotkey>
                                                <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'InvoiceNumbers'" sap:VirtualizedContainerService.HintSize="337.6,172" sap2010:WorkflowViewState.IdRef="GetOCRText_37">
                                                  <ui:GetOCRText.OCREngine>
                                                    <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))">
                                                      <ActivityFunc.Argument>
                                                        <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                                      </ActivityFunc.Argument>
                                                      <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" PredictionId="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,24.8" sap2010:WorkflowViewState.IdRef="GoogleOCR_37" Image="[Image]" Profile="None" Scale="2" />
                                                    </ActivityFunc>
                                                  </ui:GetOCRText.OCREngine>
                                                  <ui:GetOCRText.Target>
                                                    <ui:Target Element="{x:Null}" Id="5cfeb768-d8e3-4086-a49f-8d02cb58ac8c" InformativeScreenshot="81eb17b10c01f13cbce0cd6556e663aa" Selector="&lt;ctrl name='Invoice*.pdf' role='document' /&gt;&lt;ctrl name='PDF document containing 1 page' role='document' /&gt;&lt;ctrl name='Page 1' role='pane' /&gt;">
                                                      <ui:Target.ClippingRegion>
                                                        <ui:Region Rectangle="511, 130, 44, 17" />
                                                      </ui:Target.ClippingRegion>
                                                      <ui:Target.TimeoutMS>
                                                        <InArgument x:TypeArguments="x:Int32" />
                                                      </ui:Target.TimeoutMS>
                                                      <ui:Target.WaitForReady>
                                                        <InArgument x:TypeArguments="ui:WaitForReady" />
                                                      </ui:Target.WaitForReady>
                                                    </ui:Target>
                                                  </ui:GetOCRText.Target>
                                                  <ui:GetOCRText.Text>
                                                    <OutArgument x:TypeArguments="x:String">[InvoiceNumbers]</OutArgument>
                                                  </ui:GetOCRText.Text>
                                                </ui:GetOCRText>
                                                <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'InvoiceDate'" sap:VirtualizedContainerService.HintSize="337.6,172" sap2010:WorkflowViewState.IdRef="GetOCRText_38">
                                                  <ui:GetOCRText.OCREngine>
                                                    <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))">
                                                      <ActivityFunc.Argument>
                                                        <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                                      </ActivityFunc.Argument>
                                                      <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" PredictionId="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,24.8" sap2010:WorkflowViewState.IdRef="GoogleOCR_38" Image="[Image]" Profile="None" Scale="2" />
                                                    </ActivityFunc>
                                                  </ui:GetOCRText.OCREngine>
                                                  <ui:GetOCRText.Target>
                                                    <ui:Target Element="{x:Null}" Id="dedbce2b-e3be-40b1-835a-7e5747c65db3" InformativeScreenshot="710cbb53a7ace1ad33ab0b2f5de3b6a5" Selector="&lt;ctrl name='Invoice*.pdf' role='document' /&gt;&lt;ctrl name='PDF document containing 1 page' role='document' /&gt;&lt;ctrl name='Page 1' role='pane' /&gt;">
                                                      <ui:Target.ClippingRegion>
                                                        <ui:Region Rectangle="488, 148, 68, 16" />
                                                      </ui:Target.ClippingRegion>
                                                      <ui:Target.TimeoutMS>
                                                        <InArgument x:TypeArguments="x:Int32" />
                                                      </ui:Target.TimeoutMS>
                                                      <ui:Target.WaitForReady>
                                                        <InArgument x:TypeArguments="ui:WaitForReady" />
                                                      </ui:Target.WaitForReady>
                                                    </ui:Target>
                                                  </ui:GetOCRText.Target>
                                                  <ui:GetOCRText.Text>
                                                    <OutArgument x:TypeArguments="x:String">[InvoiceDateFormat]</OutArgument>
                                                  </ui:GetOCRText.Text>
                                                </ui:GetOCRText>
                                                <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'InvoiceProjectName'" sap:VirtualizedContainerService.HintSize="337.6,172" sap2010:WorkflowViewState.IdRef="GetOCRText_41">
                                                  <ui:GetOCRText.OCREngine>
                                                    <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))">
                                                      <ActivityFunc.Argument>
                                                        <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                                      </ActivityFunc.Argument>
                                                      <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" PredictionId="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,24.8" sap2010:WorkflowViewState.IdRef="GoogleOCR_41" Image="[Image]" Profile="None" Scale="2" />
                                                    </ActivityFunc>
                                                  </ui:GetOCRText.OCREngine>
                                                  <ui:GetOCRText.Target>
                                                    <ui:Target Element="{x:Null}" Id="e7ce1b33-c8f5-4bdc-b08a-bcae5c8360ee" InformativeScreenshot="7c44a4bbbbba15cc74d37ef785972ae1" Selector="&lt;ctrl name='Invoice*.pdf - Microsoft Edge - Work' role='pane' /&gt;&lt;ctrl idx='9' role='pane' /&gt;">
                                                      <ui:Target.ClippingRegion>
                                                        <ui:Region Rectangle="944, 258, 76, 21" />
                                                      </ui:Target.ClippingRegion>
                                                      <ui:Target.TimeoutMS>
                                                        <InArgument x:TypeArguments="x:Int32" />
                                                      </ui:Target.TimeoutMS>
                                                      <ui:Target.WaitForReady>
                                                        <InArgument x:TypeArguments="ui:WaitForReady" />
                                                      </ui:Target.WaitForReady>
                                                    </ui:Target>
                                                  </ui:GetOCRText.Target>
                                                  <ui:GetOCRText.Text>
                                                    <OutArgument x:TypeArguments="x:String">[InvoiceProjectName]</OutArgument>
                                                  </ui:GetOCRText.Text>
                                                </ui:GetOCRText>
                                                <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'BillTotal'" sap:VirtualizedContainerService.HintSize="337.6,172" sap2010:WorkflowViewState.IdRef="GetOCRText_40">
                                                  <ui:GetOCRText.OCREngine>
                                                    <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))">
                                                      <ActivityFunc.Argument>
                                                        <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                                      </ActivityFunc.Argument>
                                                      <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" PredictionId="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,24.8" sap2010:WorkflowViewState.IdRef="GoogleOCR_40" Image="[Image]" Profile="None" Scale="2" />
                                                    </ActivityFunc>
                                                  </ui:GetOCRText.OCREngine>
                                                  <ui:GetOCRText.Target>
                                                    <ui:Target Element="{x:Null}" Id="adbbc7aa-67cd-425d-9b9e-3738ea023230" InformativeScreenshot="9c94d6210f59f64a32c51f67c9ff88a1" Selector="&lt;ctrl name='Invoice*.pdf' role='document' /&gt;&lt;ctrl name='PDF document containing 1 page' role='document' /&gt;&lt;ctrl name='Page 1' role='pane' /&gt;">
                                                      <ui:Target.ClippingRegion>
                                                        <ui:Region Rectangle="480, 638, 69, 16" />
                                                      </ui:Target.ClippingRegion>
                                                      <ui:Target.TimeoutMS>
                                                        <InArgument x:TypeArguments="x:Int32" />
                                                      </ui:Target.TimeoutMS>
                                                      <ui:Target.WaitForReady>
                                                        <InArgument x:TypeArguments="ui:WaitForReady" />
                                                      </ui:Target.WaitForReady>
                                                    </ui:Target>
                                                  </ui:GetOCRText.Target>
                                                  <ui:GetOCRText.Text>
                                                    <OutArgument x:TypeArguments="x:String">[BillTotal]</OutArgument>
                                                  </ui:GetOCRText.Text>
                                                </ui:GetOCRText>
                                              </Sequence>
                                            </ActivityAction>
                                          </ui:WindowScope.Body>
                                        </ui:WindowScope>
                                        <ui:CloseApplication DisplayName="Close Application 'PDF'" sap:VirtualizedContainerService.HintSize="433.6,107.2" sap2010:WorkflowViewState.IdRef="CloseApplication_6">
                                          <ui:CloseApplication.Target>
                                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="b0b465f6-8449-4594-a7eb-2080734df215" InformativeScreenshot="65abbf5da3e512a15095f79ac906568e" Selector="&lt;wnd app='msedge.exe' cls='Chrome_WidgetWin_1' title='Invoice*.pdf - Work - Microsoft​ Edge' /&gt;&lt;ctrl name='Invoice*.pdf' role='document' /&gt;&lt;ctrl name='PDF document containing 1 page' role='document' /&gt;&lt;ctrl name='Page 1' role='pane' /&gt;">
                                              <ui:Target.TimeoutMS>
                                                <InArgument x:TypeArguments="x:Int32" />
                                              </ui:Target.TimeoutMS>
                                              <ui:Target.WaitForReady>
                                                <InArgument x:TypeArguments="ui:WaitForReady" />
                                              </ui:Target.WaitForReady>
                                            </ui:Target>
                                          </ui:CloseApplication.Target>
                                        </ui:CloseApplication>
                                        <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{InvoiceNumbers,InvoiceDateFormat,InvoiceProjectName,BillTotal}]" DataTable="[InvoiceDT]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="433.6,188" sap2010:WorkflowViewState.IdRef="AddDataRow_1" />
                                        <ui:WriteRange StartingCell="{x:Null}" AddHeaders="True" DataTable="[InvoiceDT]" DisplayName="Write Range Workbook" sap:VirtualizedContainerService.HintSize="433.6,116" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="Sheet1" WorkbookPath="ExcelData.xlsx" />
                                        <Sequence DisplayName="Excel to DB" sap:VirtualizedContainerService.HintSize="433.6,456" sap2010:WorkflowViewState.IdRef="Sequence_30">
                                          <Sequence.Variables>
                                            <Variable x:TypeArguments="ui:DatabaseConnection" Name="ConnectionString" />
                                            <Variable x:TypeArguments="sd2:DataTable" Name="DataTable" />
                                            <Variable x:TypeArguments="x:Int32" Name="Affected_rows" />
                                            <Variable x:TypeArguments="sd2:DataTable" Name="Db_DataVal" />
                                          </Sequence.Variables>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:ReadRange AddHeaders="True" DataTable="[Db_DataVal]" DisplayName="Read Range Workbook" sap:VirtualizedContainerService.HintSize="337.6,88" sap2010:WorkflowViewState.IdRef="ReadRange_2" SheetName="Sheet1" WorkbookPath="ExcelData.xlsx">
                                            <ui:ReadRange.Range>
                                              <InArgument x:TypeArguments="x:String">
                                                <Literal x:TypeArguments="x:String" Value="" />
                                              </InArgument>
                                            </ui:ReadRange.Range>
                                          </ui:ReadRange>
                                          <ui:DatabaseConnect DisplayName="Connect to database" sap:VirtualizedContainerService.HintSize="337.6,60" sap2010:WorkflowViewState.IdRef="DatabaseConnect_1" ProviderName="Microsoft.Data.SqlClient" ConnectionString="Data Source=VDL198;Initial Catalog=InvoiceDetails;Integrated Security=True;Encrypt=False" DatabaseConnection="[ConnectionString]" />
                                          <ui:InsertDataTable AffectedRecords="{x:Null}" ContinueOnError="{x:Null}" DataTable="[Db_DataVal]" DisplayName="Insert" ExistingDbConnection="[ConnectionString]" sap:VirtualizedContainerService.HintSize="337.6,116" sap2010:WorkflowViewState.IdRef="InsertDataTable_2" TableName="invoice_tablesFinal" />
                                        </Sequence>
                                      </Sequence>
                                    </ActivityAction>
                                  </ui:ForEach.Body>
                                </ui:ForEach>
                              </Sequence>
                            </Sequence>
                          </If.Then>
                        </If>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <ui:SaveMail DisplayName="Save Mail Message" FilePath="[&quot;Email_with_no_attachments\&quot; +mail.Subject+&quot;.eml&quot;]" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="SaveMail_9" MailMessage="[mail]" />
                    </If.Else>
                  </If>
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
          </ui:ForEach>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID0</x:Reference>
  </Flowchart>
</Activity>